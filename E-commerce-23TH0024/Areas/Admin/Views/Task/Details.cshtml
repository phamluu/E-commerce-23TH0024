@using E_commerce_23TH0024.Common.Helpers
@using WorkManagement.Enums
@model WorkManagement.Entities.TaskItem
@{
    ViewData["Title"] = "Xem Task";
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">@Html.DisplayFor(model => model.Title)</h4>
        </div>
        <div class="card-body">
            <div class="d-flex justify-content-between mb-4">
                <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
                    <i class="bi bi-arrow-left"></i> Quay lại
                </a>
                <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-success btn-sm">Sửa</a>
            </div>
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Title)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Title)
                </dd>
                
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Status)
                </dt>
                <dd class="col-sm-10">
                    @{
                        var classStatus = "";
                    }
                    @switch (Model.Status)
                    {
                        case (int)TaskItemStatus.Todo:
                            classStatus = "bg-danger text-white small px-2 py-1 rounded";
                            break;
                        case (int)TaskItemStatus.InProgress:
                            classStatus = "bg-warning text-white small px-2 py-1 rounded";
                            break;
                        case (int)TaskItemStatus.Done:
                            classStatus = "bg-success text-white small px-2 py-1 rounded";
                            break;
                        default:
                            break;
                    }
                    <span class="@classStatus">
                        @(((TaskItemStatus)Model.Status).GetDisplayName())
                    </span>
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Project)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Project.Name)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Description)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Description)
                </dd>
            </dl>
        </div>
    </div>
</div>
