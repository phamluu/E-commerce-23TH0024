// <auto-generated />
using System;
using E_commerce_23TH0024.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_commerce_23TH0024.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetRoleAspNetUsers", b =>
                {
                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("AspNetRoleAspNetUsers");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.AspNetRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetRole");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaim");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogin");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.AttributeValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IdProductAttribute")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProductAttribute");

                    b.ToTable("AttributeValue");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.ChiTietDonHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscountApplied")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DonHangId")
                        .HasColumnType("int");

                    b.Property<int>("MaSP")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<int>("SoHd")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonHangId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("ChiTietDonHang");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfigCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConfigType")
                        .HasColumnType("int");

                    b.Property<string>("ConfigValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomerTypes");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.DeliveryMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeliveryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryMethods");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.DiscountRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DiscountPercent")
                        .HasColumnType("int");

                    b.Property<string>("Discount_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LoaiSanPhamId")
                        .HasColumnType("int");

                    b.Property<decimal>("MinTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductGroupID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeID");

                    b.HasIndex("LoaiSanPhamId");

                    b.ToTable("DiscountRules");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("DistrictName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityID");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.DonHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DiscountRuleId")
                        .HasColumnType("int");

                    b.Property<int?>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<int?>("MaKH")
                        .HasColumnType("int");

                    b.Property<int?>("MaNVDuyet")
                        .HasColumnType("int");

                    b.Property<int?>("MaNVGH")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayDatHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayGiaoHang")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<int?>("NhanVienId1")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ShippingMethodID")
                        .HasColumnType("int");

                    b.Property<int?>("TinhTrang")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalProductAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DiscountRuleId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("NhanVienId");

                    b.HasIndex("NhanVienId1");

                    b.HasIndex("ShippingMethodID");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AspNetUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CityID")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerTypeID")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AspNetUserId");

                    b.HasIndex("CityID");

                    b.HasIndex("CustomerTypeID");

                    b.HasIndex("DistrictId");

                    b.HasIndex("WardId");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.LoaiSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenLSP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiSanPhams");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("LoaiMenu")
                        .HasColumnType("int");

                    b.Property<int?>("LoaiSanPhamId")
                        .HasColumnType("int");

                    b.Property<int?>("MaLoaiMenu")
                        .HasColumnType("int");

                    b.Property<string>("NhomMenu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhomMenu1Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LoaiSanPhamId");

                    b.HasIndex("NhomMenu1Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.NhanVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AspNetUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AspNetUserId");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.NhomMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenNhomMenu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NhomMenus");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.ProductAttribute", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AttributeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductAttributes");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdSanPham")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdSanPham");

                    b.ToTable("ProductVariants");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.ProductVariantAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttributeValueID")
                        .HasColumnType("int");

                    b.Property<string>("IdProductAttribute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdProductVariant")
                        .HasColumnType("int");

                    b.Property<string>("ProductAttributeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeValueID");

                    b.HasIndex("IdProductVariant");

                    b.HasIndex("ProductAttributeId");

                    b.ToTable("ProductVariantAttributes");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.SanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DVT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MaLSP")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaLSP");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.ShippingRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryMethodId")
                        .HasColumnType("int");

                    b.Property<decimal>("FixedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("FromDistance")
                        .HasColumnType("float");

                    b.Property<decimal>("PricePerKm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Region")
                        .HasColumnType("int");

                    b.Property<int?>("RegionNavigationId")
                        .HasColumnType("int");

                    b.Property<int?>("ShippingMethodID")
                        .HasColumnType("int");

                    b.Property<double?>("ToDistance")
                        .HasColumnType("float");

                    b.Property<decimal?>("WeightLitmit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryMethodId");

                    b.HasIndex("RegionNavigationId");

                    b.ToTable("ShippingRates");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DistrictID")
                        .HasColumnType("int");

                    b.Property<string>("WardName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictID");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.AspNetUsers", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.HasDiscriminator().HasValue("AspNetUsers");
                });

            modelBuilder.Entity("AspNetRoleAspNetUsers", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.AspNetRole", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_commerce_23TH0024.Models.AspNetUsers", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.AspNetUserClaim", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.AspNetUserLogin", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.AttributeValue", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.ProductAttribute", "ProductAttribute")
                        .WithMany("AttributeValues")
                        .HasForeignKey("IdProductAttribute");

                    b.Navigation("ProductAttribute");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.ChiTietDonHang", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.DonHang", "DonHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("DonHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_commerce_23TH0024.Models.SanPham", "SanPham")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.DiscountRule", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.CustomerType", "CustomerType")
                        .WithMany("DiscountRules")
                        .HasForeignKey("CustomerTypeID");

                    b.HasOne("E_commerce_23TH0024.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany("DiscountRules")
                        .HasForeignKey("LoaiSanPhamId");

                    b.Navigation("CustomerType");

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.District", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityID");

                    b.Navigation("City");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.DonHang", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.DiscountRule", "DiscountRule")
                        .WithMany("DonHangs")
                        .HasForeignKey("DiscountRuleId");

                    b.HasOne("E_commerce_23TH0024.Models.KhachHang", "KhachHang")
                        .WithMany("DonHangs")
                        .HasForeignKey("KhachHangId");

                    b.HasOne("E_commerce_23TH0024.Models.NhanVien", null)
                        .WithMany("DonHangMaNvduyetNavigations")
                        .HasForeignKey("NhanVienId");

                    b.HasOne("E_commerce_23TH0024.Models.NhanVien", null)
                        .WithMany("DonHangMaNvghNavigations")
                        .HasForeignKey("NhanVienId1");

                    b.HasOne("E_commerce_23TH0024.Models.DeliveryMethod", "ShippingMethod")
                        .WithMany("DonHangs")
                        .HasForeignKey("ShippingMethodID");

                    b.Navigation("DiscountRule");

                    b.Navigation("KhachHang");

                    b.Navigation("ShippingMethod");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.KhachHang", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.AspNetUsers", "AspNetUser")
                        .WithMany("KhachHangs")
                        .HasForeignKey("AspNetUserId");

                    b.HasOne("E_commerce_23TH0024.Models.City", "City")
                        .WithMany("KhachHangs")
                        .HasForeignKey("CityID");

                    b.HasOne("E_commerce_23TH0024.Models.CustomerType", "CustomerType")
                        .WithMany("KhachHangs")
                        .HasForeignKey("CustomerTypeID");

                    b.HasOne("E_commerce_23TH0024.Models.District", "District")
                        .WithMany("KhachHangs")
                        .HasForeignKey("DistrictId");

                    b.HasOne("E_commerce_23TH0024.Models.Ward", "Ward")
                        .WithMany("KhachHangs")
                        .HasForeignKey("WardId");

                    b.Navigation("AspNetUser");

                    b.Navigation("City");

                    b.Navigation("CustomerType");

                    b.Navigation("District");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Menu", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany("Menus")
                        .HasForeignKey("LoaiSanPhamId");

                    b.HasOne("E_commerce_23TH0024.Models.NhomMenu", "NhomMenu1")
                        .WithMany("Menus")
                        .HasForeignKey("NhomMenu1Id");

                    b.Navigation("LoaiSanPham");

                    b.Navigation("NhomMenu1");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.NhanVien", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.AspNetUsers", "AspNetUser")
                        .WithMany("NhanViens")
                        .HasForeignKey("AspNetUserId");

                    b.Navigation("AspNetUser");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.ProductVariant", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.SanPham", "SanPham")
                        .WithMany("ProductVariants")
                        .HasForeignKey("IdSanPham");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.ProductVariantAttribute", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.AttributeValue", "AttributeValue")
                        .WithMany("ProductVariantAttributes")
                        .HasForeignKey("AttributeValueID");

                    b.HasOne("E_commerce_23TH0024.Models.ProductVariant", "ProductVariant")
                        .WithMany("ProductVariantAttributes")
                        .HasForeignKey("IdProductVariant");

                    b.HasOne("E_commerce_23TH0024.Models.ProductAttribute", "ProductAttribute")
                        .WithMany("ProductVariantAttributes")
                        .HasForeignKey("ProductAttributeId");

                    b.Navigation("AttributeValue");

                    b.Navigation("ProductAttribute");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.SanPham", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaLSP");

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.ShippingRate", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.DeliveryMethod", "DeliveryMethod")
                        .WithMany("ShippingRates")
                        .HasForeignKey("DeliveryMethodId");

                    b.HasOne("E_commerce_23TH0024.Models.City", "RegionNavigation")
                        .WithMany("ShippingRates")
                        .HasForeignKey("RegionNavigationId");

                    b.Navigation("DeliveryMethod");

                    b.Navigation("RegionNavigation");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ward", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.District", "District")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictID");

                    b.Navigation("District");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.AttributeValue", b =>
                {
                    b.Navigation("ProductVariantAttributes");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.City", b =>
                {
                    b.Navigation("Districts");

                    b.Navigation("KhachHangs");

                    b.Navigation("ShippingRates");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.CustomerType", b =>
                {
                    b.Navigation("DiscountRules");

                    b.Navigation("KhachHangs");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.DeliveryMethod", b =>
                {
                    b.Navigation("DonHangs");

                    b.Navigation("ShippingRates");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.DiscountRule", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.District", b =>
                {
                    b.Navigation("KhachHangs");

                    b.Navigation("Wards");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.KhachHang", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.LoaiSanPham", b =>
                {
                    b.Navigation("DiscountRules");

                    b.Navigation("Menus");

                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.NhanVien", b =>
                {
                    b.Navigation("DonHangMaNvduyetNavigations");

                    b.Navigation("DonHangMaNvghNavigations");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.NhomMenu", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.ProductAttribute", b =>
                {
                    b.Navigation("AttributeValues");

                    b.Navigation("ProductVariantAttributes");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.ProductVariant", b =>
                {
                    b.Navigation("ProductVariantAttributes");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("ProductVariants");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ward", b =>
                {
                    b.Navigation("KhachHangs");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.AspNetUsers", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("KhachHangs");

                    b.Navigation("NhanViens");
                });
#pragma warning restore 612, 618
        }
    }
}
