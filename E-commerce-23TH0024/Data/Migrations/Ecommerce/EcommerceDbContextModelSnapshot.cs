// <auto-generated />
using System;
using E_commerce_23TH0024.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_commerce_23TH0024.Data.Migrations.Ecommerce
{
    [DbContext(typeof(EcommerceDbContext))]
    partial class EcommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.AttributeValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IdProductAttribute")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdProductAttribute");

                    b.ToTable("AttributeValues", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.ChiTietDonHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscountApplied")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdDonHang")
                        .HasColumnType("int");

                    b.Property<int>("IdSanPham")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDonHang");

                    b.HasIndex("IdSanPham");

                    b.ToTable("ChiTietDonHang", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CustomerTypes", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.DeliveryMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeliveryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryMethods", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.DiscountRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DiscountPercent")
                        .HasColumnType("int");

                    b.Property<string>("Discount_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCustomerType")
                        .HasColumnType("int");

                    b.Property<int?>("IdLoaiSanPham")
                        .HasColumnType("int");

                    b.Property<decimal>("MinTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdCustomerType");

                    b.HasIndex("IdLoaiSanPham");

                    b.ToTable("DiscountRules", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.DonHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DiscountRuleId")
                        .HasColumnType("int");

                    b.Property<int?>("IdDeliveryMethod")
                        .HasColumnType("int");

                    b.Property<int?>("IdDiscountRule")
                        .HasColumnType("int");

                    b.Property<int?>("IdKhachHang")
                        .HasColumnType("int");

                    b.Property<int?>("IdNhanVienDuyet")
                        .HasColumnType("int");

                    b.Property<int?>("IdNhanVienGiao")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayDatHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayGiaoHang")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TinhTrang")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalProductAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DiscountRuleId");

                    b.HasIndex("IdDeliveryMethod");

                    b.HasIndex("IdKhachHang");

                    b.ToTable("DonHang", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdAspNetUsers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCity")
                        .HasColumnType("int");

                    b.Property<int?>("IdCustomerType")
                        .HasColumnType("int");

                    b.Property<int?>("IdDistrict")
                        .HasColumnType("int");

                    b.Property<int?>("IdWard")
                        .HasColumnType("int");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCustomerType");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.LoaiSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenLSP")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("LoaiSanPham", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.ProductAttribute", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProductAttributes", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdSanPham")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdSanPham");

                    b.ToTable("ProductVariants", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.ProductVariantAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdAttributeValue")
                        .HasColumnType("int");

                    b.Property<string>("IdProductAttribute")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("IdProductVariant")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAttributeValue");

                    b.HasIndex("IdProductAttribute");

                    b.HasIndex("IdProductVariant");

                    b.ToTable("ProductVariantAttributes", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.SanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DVT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("IdLoaiSanPham")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSP")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdLoaiSanPham");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.ShippingRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FixedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("FromDistance")
                        .HasColumnType("float");

                    b.Property<int?>("IdCity")
                        .HasColumnType("int");

                    b.Property<int?>("IdDeliveryMethod")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerKm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("ToDistance")
                        .HasColumnType("float");

                    b.Property<decimal?>("WeightLitmit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdDeliveryMethod");

                    b.ToTable("ShippingRates", (string)null);
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.AttributeValue", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.ProductAttribute", "ProductAttribute")
                        .WithMany("AttributeValues")
                        .HasForeignKey("IdProductAttribute");

                    b.Navigation("ProductAttribute");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.ChiTietDonHang", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.DonHang", "DonHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("IdDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.SanPham", "SanPham")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("IdSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.DiscountRule", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.CustomerType", "CustomerType")
                        .WithMany("DiscountRules")
                        .HasForeignKey("IdCustomerType");

                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.LoaiSanPham", "LoaiSanPham")
                        .WithMany("DiscountRules")
                        .HasForeignKey("IdLoaiSanPham");

                    b.Navigation("CustomerType");

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.DonHang", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.DiscountRule", "DiscountRule")
                        .WithMany()
                        .HasForeignKey("DiscountRuleId");

                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.DeliveryMethod", "DeliveryMethod")
                        .WithMany("DonHangs")
                        .HasForeignKey("IdDeliveryMethod");

                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.KhachHang", "KhachHang")
                        .WithMany("DonHangs")
                        .HasForeignKey("IdKhachHang");

                    b.Navigation("DeliveryMethod");

                    b.Navigation("DiscountRule");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.KhachHang", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.CustomerType", "CustomerType")
                        .WithMany("KhachHangs")
                        .HasForeignKey("IdCustomerType");

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.ProductVariant", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.SanPham", "SanPham")
                        .WithMany("ProductVariants")
                        .HasForeignKey("IdSanPham");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.ProductVariantAttribute", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.AttributeValue", "AttributeValue")
                        .WithMany("ProductVariantAttributes")
                        .HasForeignKey("IdAttributeValue");

                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.ProductAttribute", "ProductAttribute")
                        .WithMany("ProductVariantAttributes")
                        .HasForeignKey("IdProductAttribute");

                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.ProductVariant", "ProductVariant")
                        .WithMany("ProductVariantAttributes")
                        .HasForeignKey("IdProductVariant");

                    b.Navigation("AttributeValue");

                    b.Navigation("ProductAttribute");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.SanPham", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.LoaiSanPham", "LoaiSanPham")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdLoaiSanPham");

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.ShippingRate", b =>
                {
                    b.HasOne("E_commerce_23TH0024.Models.Ecommerce.DeliveryMethod", "DeliveryMethod")
                        .WithMany("ShippingRates")
                        .HasForeignKey("IdDeliveryMethod");

                    b.Navigation("DeliveryMethod");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.AttributeValue", b =>
                {
                    b.Navigation("ProductVariantAttributes");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.CustomerType", b =>
                {
                    b.Navigation("DiscountRules");

                    b.Navigation("KhachHangs");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.DeliveryMethod", b =>
                {
                    b.Navigation("DonHangs");

                    b.Navigation("ShippingRates");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.KhachHang", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.LoaiSanPham", b =>
                {
                    b.Navigation("DiscountRules");

                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.ProductAttribute", b =>
                {
                    b.Navigation("AttributeValues");

                    b.Navigation("ProductVariantAttributes");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.ProductVariant", b =>
                {
                    b.Navigation("ProductVariantAttributes");
                });

            modelBuilder.Entity("E_commerce_23TH0024.Models.Ecommerce.SanPham", b =>
                {
                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("ProductVariants");
                });
#pragma warning restore 612, 618
        }
    }
}
